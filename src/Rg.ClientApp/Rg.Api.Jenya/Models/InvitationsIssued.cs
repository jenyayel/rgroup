// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using Microsoft.Rest;
using Newtonsoft.Json.Linq;

namespace Rg.ClientApp.Models
{
    public partial class InvitationsIssued
    {
        private IList<string> _accepted;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<string> Accepted
        {
            get { return this._accepted; }
            set { this._accepted = value; }
        }
        
        private IList<string> _outstanding;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<string> Outstanding
        {
            get { return this._outstanding; }
            set { this._outstanding = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the InvitationsIssued class.
        /// </summary>
        public InvitationsIssued()
        {
            this.Accepted = new LazyList<string>();
            this.Outstanding = new LazyList<string>();
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken acceptedSequence = ((JToken)inputObject["Accepted"]);
                if (acceptedSequence != null && acceptedSequence.Type != JTokenType.Null)
                {
                    foreach (JToken acceptedValue in ((JArray)acceptedSequence))
                    {
                        this.Accepted.Add(((string)acceptedValue));
                    }
                }
                JToken outstandingSequence = ((JToken)inputObject["Outstanding"]);
                if (outstandingSequence != null && outstandingSequence.Type != JTokenType.Null)
                {
                    foreach (JToken outstandingValue in ((JArray)outstandingSequence))
                    {
                        this.Outstanding.Add(((string)outstandingValue));
                    }
                }
            }
        }
    }
}
