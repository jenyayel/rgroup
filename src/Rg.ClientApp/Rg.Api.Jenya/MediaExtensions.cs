// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Rest;
using Rg.ClientApp;
using Rg.ClientApp.Models;

namespace Rg.ClientApp
{
    public static partial class MediaExtensions
    {
        /// <param name='operations'>
        /// Reference to the Rg.ClientApp.IMedia.
        /// </param>
        /// <param name='id'>
        /// Required.
        /// </param>
        public static AlbumItem GetById(this IMedia operations, int id)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IMedia)s).GetByIdAsync(id);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <param name='operations'>
        /// Reference to the Rg.ClientApp.IMedia.
        /// </param>
        /// <param name='id'>
        /// Required.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        public static async Task<AlbumItem> GetByIdAsync(this IMedia operations, int id, CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Microsoft.Rest.HttpOperationResponse<Rg.ClientApp.Models.AlbumItem> result = await operations.GetByIdWithOperationResponseAsync(id, cancellationToken).ConfigureAwait(false);
            return result.Body;
        }
    }
}
